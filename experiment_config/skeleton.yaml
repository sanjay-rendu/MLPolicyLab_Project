experiment_name: skeleton1
owner: bills3_group

inputs:
  sql_loc: "/data/groups/bills3/mlpp_project_home/experiment_config/data_agg.sql"
  sql_loc1: "/data/groups/bills3/mlpp_project_home/experiment_config/progress.sql"
outputs:
  report: 'outputs/model_report'
  model: 'outputs/model'

graph:
  - node_name: fetch
    inputs: sql_loc
    outputs: raw_data
    operation: data_io.fetch_sql

  - node_name: progress
    inputs: sql_loc1
    outputs: bill_progress
    operation: data_io.fetch_sql

  - node_name: data_eng
    inputs: fetch.raw_data
    outputs: engg_data
    operation: data_clean.feature_eng
    arguments:
      index: 'bill_id'
      ohe_features: ['introduced_body', 'bill_type']
      summed_features: ['role_name', 'party_id']
      other_features: ['introduced_date', 'final_status']

  - node_name: labeled_data
    inputs: [data_eng.engg_data, progress.bill_progress]
    outputs: labled
    operation: get_labeled_data.get_labeled_data
    arguments:
      n: 6

  - node_name: split
    inputs: labeled_data.labled
    outputs: [train, test]
    operation: sklearn.Splitters
    arguments:
      model_args:
        name: train_test_split
    imports:
      - [sklearn.model_selection, TimeSeriesSplit]

  - node_name: model_logistic_regression
    inputs: split.train
    outputs: [report, model]
    operation: sklearn.CrossValidate
    arguments:
      model_args:
        name: LogisticRegression
        arguments:
          max_iter: 200
      target_variable: final_status
      cv_args:
        cv: 5
    imports:
      - [sklearn.linear_model, LogisticRegression]