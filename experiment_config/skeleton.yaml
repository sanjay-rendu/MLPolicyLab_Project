experiment_name: skeleton1
owner: bills3_group

inputs:
  sql_loc: "/data/groups/bills3/mlpp_project_home/experiment_config/data_agg.sql"
  sql_loc1: "/data/groups/bills3/mlpp_project_home/experiment_config/progress.sql"
outputs:
  report: '/data/groups/bills3/mlpp_data_store/skeleton1/model_report'
  model: '/data/groups/bills3/mlpp_data_store/skeleton1/model.joblib'

graph:
  - node_name: fetch
    inputs: sql_loc
    outputs: raw_data
    operation: data_io.fetch_sql

  - node_name: progress
    inputs: sql_loc1
    outputs: bill_progress
    operation: data_io.fetch_sql

  - node_name: data_eng
    inputs: fetch.raw_data
    outputs: engg_data
    operation: data_clean.feature_eng
    arguments:
      index: 'bill_id'
      date: 'introduced_date'
      ohe_features: ['introduced_body', 'bill_type']
      summed_features: ['role_name', 'party_id']
      other_features: ['final_status']

  - node_name: labeled_data
    inputs: [data_eng.engg_data, progress.bill_progress]
    outputs: labeled_data
    operation: get_labeled_data.get_labeled_data
    arguments:
      n: 6

  - node_name: split
    inputs: labeled_data.labeled_data
    outputs: [train, val, test]
    operation: split.split
    arguments:
        val_size: 0.1
        test_size: 0.2

  - node_name: model_logistic_regression
    inputs: split.train
    outputs: model_path
    operation: model.logistic_regression_trainer
    arguments:
      model_path: model
      max_iter: 200

  - node_name: validate
    inputs: [split.val, model_logistic_regression.model_path]
    outputs: val_accuracy
    operation: model.validate
    arguments:
      threshold: 0.5

  - node_name: test
    inputs: [split.test, model_logistic_regression.model_path]
    outputs: test_accuracy
    operation: model.test
    arguments:
      threshold: 0.5
